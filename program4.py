while True:
    check=False
    while not check:
        try:
            check=True
            s=int(input("Введите количество сотрудников (целое число от 1 до 1000): "))
            if(1<=s<=1000):
                dist={} #словарь для дистанций
                tar={} #словарь для тарифов такси
                t=0
                d=0
                x=0
                print("Введите дистанции (целое число)")
                for i in range(s):
                    d = d + 1
                    print("Дистанция", d, ":")
                    try:  # заполняются аргументы словаря для дистанции и проверяется корректность введеных данных
                         dist[d] = int(input())
                    except ValueError:
                        print("Некорректный формат данных, попробуйте снова")
                        exit()
                dist_sorted_keys = sorted(dist,key=dist.get)  # возвращает список ключей(номера дистанций сотрудников), значения сортируются в порядке возрастания

                print("Введите тарифы такси (целое число)")
                for i in range(s):
                    t = t + 1
                    print("Тариф", t, ":")
                    try: # заполняются аргументы словаря для тарифов и проверяется корректность введеных данных
                        tar[t] = int(input())
                    except ValueError:
                        print("Некорректный формат данных, попробуйте снова")
                        exit()
                tar_sorted_keys = sorted(tar, key=tar.get,reverse=True)  # возвращает список ключей(номера такси), значения сортируются в порядке убывания
                # таким образом меньшая дистанция соответсвует большему тарифу, при этом затраты на такси наименьшие

                rez = dict(zip(tar_sorted_keys,dist_sorted_keys))  # совмещаются номера такси и номера дистанций в один словарь, где ключ - номера такси
                itog = sorted(rez,key=rez.get)  # сортировка дистанции по возрастанию (от 1 до 1000), при этом получается список соответсвующих ключей (номеров такси)

                print("Результат: ")
                for i in range(len(itog)):
                    x = x + 1
                    print("Сотрудник", x, "едет на такси под номером", itog[i])
            else:
                print("Число сотрудников должно быть от 1 до 1000")
        except ValueError:
               print("Некорректный формат данных, попробуйте снова")
               check = False
